".source.js":
  "React: componentDidMount() { ... }":
    prefix: "cdm"
    body: "componentDidMount() {\n\t${1}\n}${2}"

  "React: componentDidUpdate(pp, ps) { ... }":
    prefix: "cdup"
    body: "componentDidUpdate(prevProps, prevState) {\n\t${1}\n}${2}"

  "React: componentWillMount() { ... }":
    prefix: "cwm"
    body: "componentWillMount() {\n\t${1}\n}${2}"

  "React: componentWillReceiveProps(np) { ... }":
    prefix: "cwr"
    body: "componentWillReceiveProps(nextProps) {\n\t${1}\n}${2}"

  "React: componentWillUnmount() { ... }":
    prefix: "cwun"
    body: "componentWillUnmount() {\n\t${1}\n}${2}"

  "React: componentWillUpdate(np, ns) { ... }":
    prefix: "cwu"
    body: "componentWillUpdate(nextProps, nextState) {\n\t${1}\n}${2}"

  "React: cx({ ... })":
    prefix: "cx"
    body: "cx({\n\t$1: $2\n});"

  "React: forceUpdate(...)":
    prefix: "fup"
    body: "forceUpdate(${1:callback});"

  "React: getDefaultProps() { return {...} } ":
    prefix: "gdp"
    body: "getDefaultProps() {\n\treturn {\n\t\t${1}\n\t};\n},"

  "React: getInitialState() { return {...} } ":
    prefix: "gis"
    body: "getInitialState() {\n\treturn {\n\t\t${1}: ${2}\n\t};\n},"

  "React: isMounted()":
    prefix: "ism"
    body: "isMounted()"

  "React: Class.propTypes = { ... }":
    prefix: "cpt"
    body: "${1}.PropTypes = {\n\t${2}: React.PropTypes.${3:string}\n}},"

  "React: propTypes { ... }":
    prefix: "pt"
    body: "propTypes: {\n\t${1}: React.PropTypes.${2:string}\n},"

  "React: React.PropTypes.":
      prefix: "rpt"
      body: "React.PropTypes."

  "React: class skeleton":
    prefix: "cer"
    body: "\"use strict\";\nimport React from \"react\";\n\nclass ${1} extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t${2:<div />}\n\t\t);\n\t}\n\n}\n\nexport default ${1};"

  "React: createClass skeleton":
    prefix: "rcc"
    body: "\"use strict\";\nimport React from \"react\";\n\nexport default React.createClass({\n\n\trender() {\n\t\treturn (\n\t\t\t${1:<div />}\n\t\t);\n\t}\n\n});"

  "React: render() { return ... }":
    prefix: "ren"
    body: "render() {\n\treturn (\n\t\t${1:<div />}\n\t);\n}"

  "React: setState({ ... })":
    prefix: "sst"
    body: "this.setState({\n\t${1}: ${2}\n});"

  "React: shouldComponentUpdate(np, ns) { ... }":
    prefix: "scu"
    body: "shouldComponentUpdate(nextProps, nextState) {\n\t${1}\n}${2}"

  "React: this.props.":
    prefix: "props"
    body: "this.props.${1}"

  "React: this.state.":
    prefix: "state"
    body: "this.state.${1}"

  "React: render(component, container, [callback])":
    prefix: "rrc"
    body: "React.render(${1:<$2 />}, ${3:document.body}${4:, ${5:callback}});"

  "React: constructor(props)":
    prefix: "cns"
    body: "constructor(props) {\n\tsuper(props);\n\t${1:this.state = ${2};}\n}"

  "React: class Foo extends Bar":
    prefix: "clss"
    body: "class ${1:Foo} extends ${2:React.Component} {\n\trender() {\n\t\t${3}\n\t}\n}"
